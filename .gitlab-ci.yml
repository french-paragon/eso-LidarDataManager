# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.

stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  image: lidardatamanager-buildenv:latest
  script:
    - echo "Compiling the code..."
    - git submodule init
    - git submodule update
    
    - mkdir build
    - cd build
    - cmake ../ -DCMAKE_BUILD_TYPE=Release
    - make -j$(nproc)

    - cd ..
    - tar -zcf build.tar.gz build

    - echo "Compile complete."

  artifacts:
      name: rfbuild
      when: always
      expire_in: 2 hours
      paths:
        - build.tar.gz

unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  image: lidardatamanager-buildenv:latest

  dependencies:
    - build-job

  script:
    - echo "Running unit tests... "
    - tar -xvf build.tar.gz
    - cd build
    - make test-details

benchmark-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  image: lidardatamanager-buildenv:latest

  dependencies:
    - build-job

  script:
    - echo "Running benchmarks... "
    - tar -xvf build.tar.gz
    - cd build
    - make benchmark

deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  image: lidardatamanager-buildenv:latest
  environment: production
  script:
    - echo "Deploying application..."
    - echo "No deploy steps implemented yet."
